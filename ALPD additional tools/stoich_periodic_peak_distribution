%Plot periodicity based on nearest neighbour peak distances

%load output file first

%% Calculate nearest neighbour spacing
%GW = params.stoichKDW;
GW = 0.7; %molecular precision
ch = 1;
Isingle_interp_timepts = 3;  %number of points over which stoichiometry is back-interpolated for a single molecule
interp_timepts = 4;%params.uppertracklimit;  %mean number of points over which stoichiometry is back-interpolated for the current data
selfweighted=1;

stoichs=output.UnlinkedStoichsList{1,ch};
if selfweighted==1
[plotP,KDFpersL,KDFxP]=KDFplotH(stoichs,GW/sqrt(2),0,1);
else
[plotP,KDFpersL,KDFxP]=KDFplotH(stoichs,GW/sqrt(2));
end
[pks,locs] = findpeaks(KDFpersL);
peaklocs=KDFxP(locs);
spacing=(peaklocs(2:end)-peaklocs(1:end-1));

PeakGW = GW*sqrt(2*mean(stoichs)/length(locs)/(interp_timepts/Isingle_interp_timepts));
[plotS,KDFperS,KDFxS]=KDFplotH(spacing(spacing>GW/sqrt(2)),PeakGW,0,1);
    
    pbaspect([1 1 1]);
    ylabel('Protein fraction')
    xlabel('Stoichiometry peak-to-peak interval (molecules)')
    box on
    rangemax = 10;
    %rangemax = max(spacing)+2*GW;
    xlim([0,rangemax])
